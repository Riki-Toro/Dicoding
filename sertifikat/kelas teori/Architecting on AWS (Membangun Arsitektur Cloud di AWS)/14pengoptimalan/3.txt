Mengubah Arsitektur Menjadi Lebih Tangguh
    Salah satu hal yang perlu Anda pertimbangkan saat membangun arsitektur cloud adalah membuatnya menjadi lebih tangguh. Dengan begitu, aplikasi Anda bisa menghadapi lonjakan traffic dengan efektif, dapat diandalkan, dan siap menghadapi kegagalan/bencana.

    Coba kita lihat arsitektur di bawah ini yang menggambarkan aplikasi dengan high availability dalam satu Availability Zone. 

    202106041656212ff1131deea0517a9940ae485095af0b.png

    Mari kita kembali ke skenario startup warung kopi. Katakanlah startup kita memiliki arsitektur seperti di atas. Anda ditugaskan untuk melakukan penyempurnaan atas arsitektur tersebut. Kira-kira, apa saja yang akan Anda lakukan?

    Oke, mari kita uraikan saja.

        Tambahkan Availability Zone baru
        Jika kita lihat dari sisi Perencanaan Disaster Recovery, arsitektur tersebut masih rentan terhadap kegagalan yang bisa saja terjadi di satu Availability Zone (AZ). Salah satu hal yang dapat Anda lakukan dengan cepat adalah dengan menambahkan AZ baru, seperti yang diilustrasikan pada gambar di bawah ini.
        202106041656514dac2854f4858841847c75fd1dbeb069.png


        Tambahkan kemampuan Auto Scaling
        Langkah selanjutnya yang bisa Anda lakukan adalah dengan memanfaatkan kemampuan Auto Scaling di masing-masing subnet. Hal ini tentu akan memungkinkan arsitektur Anda mengatasi lonjakan user.
        202106041657046a2c794066ae1c8bf1f183a67ad84761.png


        Replikasi arsitektur ke Region baru
        Selanjutnya, Anda bisa mereplikasi arsitektur ke region baru sebagai bagian dari ekspansi dan juga failover atau disaster recovery.
        20210604165735342c213356cbd5ea4893097cd6d68368.png


    Lihat! Sekarang arsitektur tersebut menjadi lebih elastis, andal, dan siap jika suatu saat terjadi kegagalan atau bahkan bencana.







Praktik Terbaik untuk Membuat Sistem di AWS
    Oke, sampai tahap ini kita telah melihat beberapa ulasan dan cara yang dapat mengoptimalkan arsitektur cloud. Walaupun begitu, Anda pun harus tetap mengetahui beberapa praktik terbaik yang dapat diterapkan saat mendesain atau membuat sistem di AWS, antara lain:

        Perhatikan skalabilitas : AWS memiliki kemampuan untuk scale up maupun scale out. Pastikan Anda mengerti dan memanfaatkan keduanya dengan benar. 

        Automasikan lingkungan Anda : Manfaatkan layanan-layanan AWS yang dapat membuat lingkungan secara otomatis, seperti AWS CloudFormation, AWS Elastic Beanstalk, dsb.

        Gunakan sumber daya sekali pakai : Jika ada sumber daya di sistem Anda yang tidak terpakai (idle), pastikan apakah memungkinkan untuk diganti dengan sumber daya sekali pakai (disposable) atau dapat dimatikan saat tak terpakai seperti AWS Lambda.

        Pastikan komponen Anda loosely coupled : Manfaatkan layanan AWS seperti SQS, SNS, dsb untuk membebaskan komponen sistem dari ketergantungan atau tightly coupled.

        Desain service, bukan server : Ingat! Di AWS, Anda tidak perlu memikirkan hal-hal yang berkaitan dengan perangkat keras. Fokuskan diri Anda pada pengembangan aplikasi, bukan infrastruktur yang mendasarinya.

        Pilih solusi database yang tepat : AWS memiliki layanan database berbasis SQL dan NoSQL yang bervariasi sesuai kebutuhan Anda. Jadi, pilihlah layanan database yang tepat.

        Hindari titik kegagalan tunggal : Setiap layanan di AWS memiliki kemampuan untuk menghindari titik kegagalan tunggal (suatu komponen yang jika gagal, ia akan memiliki potensi menghentikan keseluruhan sistem). Pastikan Anda mengerti dan memanfaatkan hal ini.

        Optimasi biaya : AWS didesain agar Anda dapat menjalankan sistem secara optimal dan hemat biaya. Tapi pastikan bahwa Anda juga memanfaatkan hal ini.

        Gunakan caching : Caching akan sangat meningkatkan performa layanan sistem Anda.

        Amankan infrastruktur di setiap lapisan : Keamanan sistem Anda adalah tanggung jawab Anda sendiri. Maka dari itu, pastikan Anda mengamankan infrastruktur Anda di setiap lapisannya. Misal pada lapisan jaringan, Anda menggunakan security group dan network ACL.

    Ingat! Untuk memastikan lingkungan Anda telah menerapkan praktik terbaik dari AWS, gunakanlah AWS Well-Architected Tool. Tentu Anda masih ingat kan dengan layanan tersebut? Layanan tersebut telah kita bahas di modul pertama dari kelas ini. 

    AWS Well-Architected Tool adalah tool gratis yang tersedia di AWS Management Console untuk membantu Anda dalam mengulas dan membandingkan beban kerja dengan praktik terbaik terbaru terkait arsitektur dari AWS. Tentu, praktik terbaik tersebut mengacu pada AWS Well-Architected Framework.
