Pengantar ke Automasi
    Di modul sebelumnya kita sudah mempelajari bagaimana Elastisitas, Ketersediaan Tinggi, dan Pemantauan membantu kita untuk melakukan scaling terhadap Startup Warung Kopi dalam menangani lonjakan pengguna hingga menembus angka puluhan bahkan mungkin ratusan ribu. Mantap!

    Tetapi jangan lupa, sampai saat ini, proses membuat arsitektur, men-deploy aplikasi, dan pembaruan perangkat lunak masih dilakukan secara manual. Hal ini akan sangat menghambat Startup kita untuk mampu menangani lonjakan user seperti itu.

    Di modul ini kita akan melengkapi arsitektur Startup Warung Kopi dengan automasi. Sehingga, saat melakukan update ataupun deploy di cloud, Anda akan terbebas dari proses manual. 

    Dengan menghilangkan proses manual, arsitektur IT kita akan benar-benar mampu beradaptasi terhadap tuntutan bisnis, baik itu lonjakan user (naik maupun turun), peluncuran produk, atau mencoba fitur baru yang bisa mendukung pertumbuhan bisnis Startup kita. 

    Untuk menjawab kebutuhan arsitektur di atas, kita akan mempelajari hal-hal berikut ini:

        Mengapa melakukan automasi?
        Automasi infrastruktur
        Automasi deployment

    Oke, mari kita lihat penjelasan lebih detail di materi berikutnya!





Alasan Melakukan Automasi
    Pada materi-materi sebelumnya, kita telah belajar untuk membangun arsitektur di AWS secara manual, seperti membuat VPC, EC2 instance, RDS instance, dll. Semua komponen tersebut harus Anda buat satu per satu di masing-masing dashboard console layanannya. Nah, tahukah Anda? Kita bisa membuat automasi proses deploy arsitektur sehingga akan menghemat waktu.

    Gambar di bawah ini menunjukkan proses manual dan panjang yang harus Anda lakukan saat membangun arsitektur di cloud. 

    20210604154333ad0747e23927f1802e751339cc529582.png

    Dapat Anda lihat pada gambar di atas bahwa dibutuhkan waktu dan proses yang besar untuk membangun lingkungan komputasi berskala besar. Berikut beberapa pertanyaan yang perlu Anda pertimbangkan:

        Mana yang ingin Anda terapkan, implementasi otomatis atau manual? 
        Apa saja risiko dari implementasi manual?
        Bagaimana Anda memperbarui server yang berjalan di lingkungan production? Bagaimana Anda akan meluncurkan deployment di beberapa region geografis? Ketika terjadi kegagalan, bagaimana Anda melakukan rollback/restore?
        Bagaimana dengan penerapan debugging? Bagaimana Anda menemukan apa yang salah dan kemudian memperbaikinya?
        Bagaimana Anda akan mengelola dependensi pada berbagai sistem dan subsistem di organisasi Anda?
        Terakhir, dapatkah Anda melakukan semua ini dengan manual?
        
    INGAT! Jika Anda harus mengubah sesuatu di lingkungan production secara manual, itu berarti Anda menempatkan diri pada risiko. Berikut adalah beberapa risiko jika Anda melakukan perubahan secara manual.

    202106181505535e3c5a7978b5198b23b0f21ea131a253.png

    Mari kita jabarkan poin-poinnya:

        Dengan membuat dan menambahkan fitur aplikasi secara manual ke lingkungan Anda, lingkungan cloud Anda tidak akan bisa di-scale (diskalakan). Jika Anda bertanggung jawab atas aplikasi enterprise yang besar, maka takkan ada cukup orang untuk menjalankan proses secara manual.
        Dengan melakukan proses manual, maka tidak ada version control. Sehingga, akan sulit untuk mengembalikan lingkungan production ke versi sebelumnya.
        Memiliki jejak audit tentu sangatlah penting untuk menghadapi situasi compliance dan keamanan. Sangatlah berbahaya jika Anda membiarkan orang mengontrol dan mengedit lingkungan Anda secara manual.
        Terakhir, sulit menerapkan konsistensi. Tahukah Anda? Konsistensi merupakan hal yang sangat penting untuk meminimalkan risiko. Nah, dengan automasi, Anda dapat menjaga konsistensi di lingkungan AWS.
