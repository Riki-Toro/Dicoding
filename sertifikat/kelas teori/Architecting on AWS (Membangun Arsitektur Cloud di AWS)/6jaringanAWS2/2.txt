Menghubungkan VPC
    Mengisolasikan workloads (beban kerja) adalah pendekatan yang baik dan hal ini umum diterapkan dengan penggunaan VPC. Tetapi, adakalanya kita tetap memerlukan komunikasi antara workload-workload yang terdapat di VPC yang berbeda. Hal ini bisa kita dapatkan dengan melakukan VPC Peering.

    Berikut adalah hal-hal yang perlu diperhatikan saat kita mendesain VPC Peering:

        1. VPC Peering hanya bisa digunakan untuk IP private.
        2. Kita bisa melakukan Peering intra dan antar-Region.
        3. Block IP antara VPC tidak boleh tumpang tindih.
        4. Hanya satu resource peering di antara dua VPC mana pun.
        5. Tidak mendukung hubungan peering transitif.
        6. Dapat dibuat di antara akun AWS yang berbeda.

    Untuk membuat koneksi VPC Peering, VPC pemohon/requester (VPC lokal) mengirimkan permintaan ke VPC peer untuk membuat koneksi VPC Peering. VPC peer dapat dimiliki oleh kita sendiri atau akun AWS lain, tidak boleh terjadi blok CIDR yang tumpang tindih dengan blok CIDR VPC pemohon. VPC peer tujuan harus menerima (accept) permintaan untuk mengaktifkan koneksi VPC Peering. 

    Nah, untuk mengizinkan aliran lalu lintas antara VPC peer yang sudah terkoneksi dengan menggunakan alamat IP private, tambahkan route ke satu atau beberapa route table VPC kita yang mengarah ke alamat IP dari VPC peer tujuan. Demikian sebaliknya, VPC peer tujuan juga perlu menambahkan route pada salah satu route table VPC mereka yang mengarah ke rentang alamat IP VPC kita. Diagram di bawah menggambarkan hal ini.

    202106041103350b07737e5f5bff3d7b3e79ec3d35f4e2.png


    Contoh Pengaplikasian VPC Peering
        Sekarang, mari kita lihat contoh pengaplikasian VPC Peering untuk layanan berbagi (shared services). Dalam contoh ini, untuk melaksanakan tanggung jawabnya, tim IT dan Information Security perusahaan menyediakan "Services VPC" yang mana setiap departemen dapat melakukan peer satu sama lain. 

        VPC ini memiliki koneksi ke Active Directory, alat pemindaian keamanan, alat pemantauan/pencatatan, dan beberapa fungsi lainnya. VPC ini juga menyediakan proxy yang dapat mengakses resource on-premise.

        20210604110821b204ccf6995a4e5cdead2ce213b19147.png

        Perhatikan bahwa ada koneksi VPC Peering dengan VPC yang berada di region yang berbeda, yakni antara Region A dan Region B. Amazon EC2 memungkinkan hubungan peering antara VPC di berbagai AWS Regions. 

        VPC Peering antar region memungkinkan sumber daya VPC (seperti EC2 instance, Amazon RDS, dan Lambda function) yang berjalan di AWS Region yang berbeda untuk berkomunikasi satu sama lain menggunakan alamat IP private tanpa memerlukan gateway, koneksi VPN, atau perangkat keras fisik terpisah.





AWS Transit Gateway
    AWS Transit Gateway dapat mengoneksikan VPC dengan on-premise melalui hub terpusat sebagai layanan yang terkelola sepenuhnya yang tanpa mewajibkan kita untuk menyediakan peralatan khusus di on-premise. AWS-lah yang akan mengelola ketersediaan dan skalabilitas jaringan tersebut untuk Anda.

    2021061815044384f40d158b999ad181beb5f5b73bf12c.png

    AWS Transit Gateway memungkinkan Anda untuk menghubungkan ribuan VPC. Kita dapat memasang semua konektivitas hybrid (VPN dan juga koneksi Direct Connect) ke satu Transit Gateway, di mana ia akan mengonsolidasi dan mengontrol seluruh konfigurasi perutean kita secara terpusat. 

    Transit Gateway juga mengontrol bagaimana lalu lintas diarahkan di antara semua jaringan yang terhubung menggunakan route table. Transit Gateway menggunakan topologi hub-and-spoke, yakni model jaringan yang memiliki komponen terpusat dan menghubungkan beberapa jaringan di sekitarnya. Model hub dan spoke ini menyederhanakan manajemen dan mengurangi biaya operasional karena VPC hanya terhubung ke Transit Gateway untuk mendapatkan akses ke jaringan yang terhubung.


    Contoh Implementasi Transit Gateway
        1. Komunikasi antar-VPC
            20210604110959f1edd1b2260db0e57dba16c7b033f2b3.png
            Gambar di atas menunjukkan bahwa dengan menggunakan Transit Gateway, kita dapat menyederhanakan konfigurasi Route Table pada setiap VPC. Dengan menggunakan Transit Gateway, kita hanya mendefinisikan rute ke Transit Gateway pada masing-masing VPC. Selanjutnya, kita mendefinisikan route ke masing-masing VPC di dalam Route Table Transit Gateway.

        2. Komunikasi terpisah antar masing-masing VPC dan akses VPN
            Skenario yang umum adalah memiliki akses penuh ke lingkungan kita dari sumber VPN. Namun dalam skenario kedua, kita tidak ingin VPC dapat berbicara satu sama lain.
            202106041110213c9e1afbf40fc48104e446e373494467.png
            Untuk mencapai skenario ini, kita memerlukan dua Route Table di dalam Transit Gateway dengan fungsi sebagai berikut:

                a. Route Table warna hijau memberitahukan jalur default ke seluruh VPC yang mengarah ke VPN gateway.
                b. Route Table warna merah selanjutnya memberitahukan jalur ke CIDR block masing-masing VPC.
