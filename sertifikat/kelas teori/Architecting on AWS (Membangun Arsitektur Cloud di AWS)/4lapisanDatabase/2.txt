Layanan Database AWS
    Pada dasarnya ada dua jenis layanan database yang tersedia di AWS yaitu Managed (terkelola) dan Unmanaged (tidak terkelola). Mari kita uraikan perbedaan keduanya.


        AWS Unmanaged Service 
            Diagram di bawah ini menunjukkan perbedaan antara meng-hosting database sendiri (on-premise) atau menjalankan database di atas layanan Amazon EC2.

            Jika kita meng-hosting database secara on-premise, maka seluruh aktivitas fisik yang diperlukan sebelum server bisa diakses harus Anda lakukan sendiri, seperti masalah daya, jaringan, racking (penempatan), stacking (penyusunan), sampai instalasi OS. 

            Bahkan setelah OS diinstal pun, Anda masih harus bertanggung jawab untuk aktivitas  tambahan, seperti patching OS hingga optimasi aplikasi. 

            Ketahuilah! Empat kegiatan pertama (masalah daya sampai instalasi OS) adalah kegiatan fisik yang perlu dilakukan dan mungkin memerlukan rentang waktu yang lama dalam hitungan beberapa jam hingga hari.

            Saat menggunakan layanan Unmanaged Service di AWS, itu berarti kita akan menggunakan VM untuk server database alias menggunakan Amazon EC2. Nah, empat kegiatan awal tadi sudah dikerjakan oleh tim data center AWS, sehingga yang perlu dilakukan adalah menyalakan VM tersebut, yang mana dapat diakses dalam hitungan menit. Selanjutnya, kita hanya perlu melakukan kegiatan tambahan dari patching OS hingga mengoptimasi aplikasi.


        AWS Managed Service
            Sebelumnya kita telah belajar tentang AWS Unmanaged Service yang mampu membebaskan kita dari tugas-tugas dasar (tetapi tetap penting!) seperti pemeliharaan perangkat keras server, perangkat jaringan, instalasi OS, dan sebagainya. Ini sangat membantu kita dalam mengirimkan aplikasi ke pelanggan (time to market) menjadi lebih cepat. Tetapi jangan lupa, selain aktivitas tersebut, kita masih harus mengerjakan hal-hal di bawah ini:

                Instalasi aplikasi (dalam hal ini adalah database)
                Patching
                Backup dan restore
                High Availability
                Skalabilitas

            Hal-hal di atas tetap harus Anda lakukan dan sangat memakan waktu. Nah, untungnya AWS telah memikirkan hal itu dan meluncurkan AWS-Managed Database Service. 

            Dengan menggunakan layanan ini, AWS akan melakukan semua hal di atas sehingga kita dan tim akan lebih fokus serta hanya perlu melakukan sesuatu yang benar-benar memiliki nilai tambah, yaitu optimasi aplikasi (app optimization). Hal ini ditunjukkan pada gambar berikut:

            Wow, menarik bukan? Dengan AWS Managed Service, tim kita terbebas dari tugas rutin (yang sekali lagi, tetap penting!) dan bisa berkonsentrasi mengoptimalkan kinerja aplikasi. Mari kita pelajari apa saja layanan AWS Managed Service yang tersedia untuk database di pembahasan selanjutnya!
            



Opsi Database di AWS
    Seperti yang telah kita pelajari sebelumnya, saat ini ada dua jenis database yang tersedia, yaitu database relasional dan nonrelasional. Gambar di bawah menunjukkan beberapa pilihan dari kedua jenis database tersebut yang tersedia di AWS. Harap diperhatikan bahwa ini hanya sebagian pilihan saja.

    Di modul ini, kita hanya akan mempelajari dua saja, yakni Amazon RDS dan Amazon DynamoDB. Ayo kita mulai pembahasannya!


        Amazon RDS
            Amazon RDS atau Amazon Relational Database Service adalah layanan database relasional yang ditangani sepenuhnya (fully managed) oleh AWS. Di Amazon RDS, Anda bisa memilih beberapa tipe database engine, seperti Amazon Aurora, MySQL, MariaDB, PostgreSQL, Oracle, dan Microsoft SQL Server.

            Dengan menggunakan Amazon RDS, Anda akan mendapatkan banyak keuntungan, di antaranya:

                Layanan database relasional yang ditangani sepenuhnya (fully managed) oleh AWS. 
                Pembuatan instance database baru dicapai dalam hitungan menit.
                Proses peningkatan kapasitas hanya dengan beberapa klik.

            Dari semua pilihan mesin dari Amazon RDS di atas, ada satu opsi yang unik. Apakah Anda bisa menebaknya? Cek jawabannya di modul berikutnya!


        Amazon Aurora
            Amazon Aurora adalah mesin database relasional terkelola sepenuhnya yang kompatibel dengan MySQL dan PostgreSQL. Layanan ini mengombinasikan kecepatan dan keandalan dari database komersial kelas atas dengan kemudahan dan efektivitas biaya dari database open-source. 

            Tunggu sebentar, apa yang dimaksud dengan “kompatibel dengan MySQL dan PostgreSQL?” Maksudnya, sebagian besar kode, alat, serta aplikasi yang menggunakan database MySQL dan PostgreSQL dapat digunakan bersama Aurora dengan sedikit atau tanpa perubahan sama sekali. Menarik, kan?

            Tak hanya itu, Amazon Aurora juga memiliki beberapa keuntungan, antara lain:

                Throughput yang sangat cepat, bahkan hingga 5x dibandingkan dengan MySQL dan hingga 3x jika dikomparasi dengan PostgreSQL.
                Replikasi data secara synchronous ke 6 storage nodes di tiga Availability Zone.
                Hanya butuh sedikit perubahan pada aplikasi Anda.
                Dukungan Aurora global database.


        Database Nonrelasional (NoSQL) - Amazon DynamoDB
            Kita telah mempelajari secara singkat apakah database NoSQL itu. Nah, di modul ini Anda akan berkenalan dengan Amazon DynamoDB. Ia adalah salah satu dari beberapa layanan database NoSQL yang tersedia di AWS. 

            Oke, mari kita uraikan beberapa poin dari gambar di atas, antara lain:

                Fully Managed (terkelola sepenuhnya)
                    Dengan menggunakan layanan Amazon DynamoDB, tim kita bisa berfokus pada hal yang benar-benar memberikan nilai tambah, seperti mengoptimasi aplikasi.


                Event-driven programming
                    Saat menggunakan Amazon DynamoDB kita tidak perlu mengelola server. Dengannya, kita bisa menerapkan event-driven programming atau serverless computing.


                Extreme Horizontal Scaling
                    Amazon DynamoDB adalah database nonrelasional yang mendukung model data key-value (nilai-kunci) dan dokumen. Layanan ini bahkan mendukung tabel berukuran apa pun secara virtual dengan horizontal scaling (penyesuaian kapasitas secara horizontal).

                    Hal tersebut memungkinkan DynamoDB untuk melakukan scaling lebih dari 10 triliun permintaan per hari dengan puncak lebih dari 20 juta permintaan per detik dengan penyimpanan pada tingkat petabyte.


    Alright, tibalah kita di akhir materi tentang opsi Database di AWS. Intinya, baik relasional maupun nonrelasional, keduanya memiliki kasus penggunaan yang berbeda sesuai kebutuhan Anda. 

    Gunakanlah Amazon Aurora sebagai pilihan untuk database relasional jika aplikasi Anda membutuhkan kecepatan dan keandalan dari layanan database kelas atas. Aurora tersedia secara global dengan biaya yang ekonomis dan ditangani sepenuhnya oleh AWS.

    Sementara itu, gunakanlah Amazon DynamoDB sebagai pilihan untuk database NoSQL dengan kemampuan horizontal scaling yang luar biasa dan serverless programming (dikombinasikan dengan AWS Lambda). Layanan ini juga sepenuhnya ditangani oleh AWS.
    