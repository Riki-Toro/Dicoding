Pendahuluan Dasar JavaScript
    Di kelas Belajar Dasar Pemrograman Web, Anda sudah mampu membuat website sederhana menggunakan HTML dan CSS. Bila Anda paham dan menguasai kedua skill tersebut, sebenarnya Anda sudah mampu membuat website yang sangat amat cantik. Wah!

    Kini timbul pertanyaan, apakah dengan HTML dan CSS saja apakah cukup dalam membuat website? Memang benar dengan HTML dan CSS saja Anda dapat membuat sebuah website, namun website hanya sebatas halaman informasi yang statis (seperti website yang Anda buat di kelas Belajar Dasar Pemrograman Web). Tidak akan ada interaktivitas dengan pengguna, kaku, dan sulit dalam menampilkan konten yang dinamis.

    Lalu bagaimana agar kita dapat mengembangkan website yang interaktif dan dinamis? Perkenalkan, JavaScript!

    JavaScript merupakan satu-satunya bahasa pemrograman yang dapat dipahami oleh browser untuk membantu website lebih interaktif dan dinamis. Dengan JavaScript, kita dapat memberikan fungsionalitas lebih pada website. Kita bisa membuat game di website, membuat website layaknya aplikasi, bahkan mengedit foto sekalipun. Luar biasa! JavaScript mampu mengubah fungsi dari website yang sebelumnya hanya sebatas portal untuk menampilkan informasi statis.

    Sebelum kita melakukan hal-hal keren menggunakan JavaScript, tentu kita perlu mendalami dulu dasar dari bahasa pemrograman JavaScript. Kita akan belajar JavaScript untuk pengembangan web secara runut agar Anda tidak bingung.

    Nah, di modul ini kita akan membahas detail dasar dari JavaScript hingga Anda mampu:

        Menuliskan sintaks JavaScript
        Mengetahui Statement dan Expressions
        Mengetahui cara menuliskan komentar di JavaScript
        Mengetahui cara membuat variabel
        Mengetahui tipe data yang ada di JavaScript
        Mengetahui berbagai macam operator yang ada di JavaScript
        Mengetahui cara melakukan percabangan di JavaScript
        Mengetahui cara melakukan perulangan di JavaScript
        Mengetahui cara mengelola data yang kompleks menggunakan objek dan array.
        Mengetahui mendeklarasikan atau membuat fungsi dan menggunakannya.

    Supaya proses belajar menjadi lebih interaktif, apabila Anda memiliki pertanyaan perihal materi disajikan, jangan segan untuk bertanya via forum diskusi. Mentor kami akan sigap untuk berusaha menjawab pertanyaan serta. Sebaliknya, Anda juga dipersilahkan untuk membantu menjawab pertanyaan yang diajukan oleh peserta belajar lainnya.



Apa itu JavaScript
    JavaScript adalah bahasa pemrograman tingkat tinggi yang pada awalnya dikembangkan untuk membuat website menjadi lebih “hidup”. Bersama dengan HTML dan CSS, JavaScript menjadi bahasa pemrograman paling populer untuk mengembangkan aplikasi berbasis web. Bahasa ini mampu memberikan logic ke dalam website, sehingga website tersebut memiliki fungsionalitas tambahan dan lebih interaktif.

    JavaScript termasuk ke dalam kategori scripting language. Apa maksudnya? Salah satu ciri-ciri utama dari bahasa scripting adalah kode tidak perlu dikompilasi agar bisa dijalankan. Scripting language menggunakan interpreter untuk menerjemahkan kode atau perintah yang kita tulis supaya dimengerti oleh mesin.

    Itulah kenapa bahasa scripting tidak membutuhkan banyak kode yang perlu ditulis agar sebuah program bisa dijalankan. Hanya dengan satu baris kode berikut Anda sudah bisa membuat program yang menampilkan teks “Hello, World!” ke layar.

        console.log("Hello World");

    Sederhana, bukan? Itulah salah satu ciri utama JavaScript sebagai scripting language. Tentu tidak lengkap rasanya ketika kita sudah mengetahui apa itu JavaScript, tetapi tidak tahu sejarah di baliknya. Sejarah singkat dari JavaScript dapat Anda simak di materi berikutnya.



Sejarah JavaScript
    JavaScript dibuat pada tahun 1995 oleh Brendan Eich, programmer dari Netscape. Bahasa ini awalnya dinamai “Mocha” kemudian berubah menjadi “LiveScript”. Pada saat itu bahasa Java merupakan bahasa pemrograman yang paling populer. Untuk memanfaatkan kepopulerannya, nama LiveScript pun diubah menjadi “JavaScript”. Jadi, meskipun namanya mirip, JavaScript tidak ada hubungannya dengan bahasa pemrograman Java.

    Setelah diadopsi di luar Netscape, JavaScript distandarisasi oleh European Computer Manufacturers Association (ECMA). Sejak saat itu JavaScript juga dikenal dengan ECMAScript. Meskipun begitu, masih banyak yang menyebutnya dengan JavaScript hingga saat ini.

    Terdapat beberapa versi JavaScript yang sudah distandarisasi oleh ECMAScript. Pada tahun 2000 hingga 2010, ECMAScript 3 merupakan versi yang banyak digunakan ketika JavaScript sedang mendominasi. Selama waktu tersebut, ECMAScript 4 sedang dalam proses pengembangan dengan harapan akan memberikan improvisasi yang cukup signifikan. Namun, ambisi tersebut tidak berjalan mulus sehingga pada tahun 2008 pengembangan ECMAScript dihentikan.

    Walaupun begitu, ini bukan akhir dari JavaScript. Pengembangan berganti menjadi ECMAScript 5 dengan mengurangi ambisinya dan hanya melakukan perbaikan pada hal yang tidak jadi kontroversi. Pembaruan tersebut berhasil dan akhirnya ECMAScript 5 rilis pada tahun 2009.

    Lalu, pada tahun 2015 ECMAScript 6 rilis dengan membawa perubahan yang cukup besar termasuk ide-ide yang sudah direncanakan untuk versi 4. Sejak saat itu, tiap tahun JavaScript melakukan update bersifat minor.



Mengenal Statement dan Expression dengan Menulis Kode JavaScript Pertama
    Menulis kode dalam suatu bahasa pemrograman sederhananya adalah menuliskan instruksi-instruksi untuk dijalankan oleh komputer. Kode di bawah ini merupakan instruksi bagi terminal atau konsol untuk mencatat (log) kalimat “Hello, World!”.

        console.log("Hello World");
    
    console.log adalah kode bawaan JavaScript untuk menampilkan pesan ke konsol, bisa berupa web konsol atau konsol dari terminal/command prompt.

    Kode atau teks yang berada di dalam tanda kurung adalah pesan yang ingin ditampilkan. Pada contoh kode di atas, kita menggunakan tanda kutip (“”) untuk menandakan bahwa pesan yang ingin ditampilkan merupakan sebuah string atau teks. Kita akan membahas mengenai tipe data pada beberapa modul ke depan. Saat ini kita akan fokus untuk menampilkan teks terlebih dulu. Sekarang cobalah untuk menampilkan nama Anda sendiri ke konsol.

        console.log("Hello, World!");
        console.log("Hallo, Riki Widiantoro");

        // Tampilkan nama Anda ke layar pada kode di bawah:
        
        Hello, World!
        Hallo, Riki Widiantoro

    JavaScript membagi instruksi secara umum menjadi dua jenis, yaitu expression dan statement.

    Expression adalah unit kode yang dapat dievaluasi menjadi suatu nilai. Untuk lebih mudahnya, perhatikan contoh kode berikut:

        5; // Baris kode ini merupakan expression karena interpreter akan membaca kode ini dan menghasilkan nilai 5.
        2 + 3; // Baris kode ini juga merupakan expression. Interpreter mengevaluasi kode dan juga akan menghasilkan nilai 5.

    Sementara itu, statement adalah instruksi untuk melakukan sebuah aksi tertentu. Aksi ini bisa termasuk membuat variabel, melakukan perulangan, pengecekan kondisi, dll.

    Jika Anda masih bingung untuk membedakan expression dan statement, tidak perlu khawatir. Saat ini belum banyak kode yang bisa kita jadikan contoh. Namun, konsep ini akan banyak kita gunakan pada materi-materi yang akan datang. Yang perlu Anda ingat adalah:

    Expression merupakan kode yang menghasilkan nilai.
    Statement menunjukkan aksi yang dilakukan.



Komentar
    Pada materi sebelumnya kita telah membahas bahwa kode yang kita tulis merupakan kumpulan instruksi yang harus dijalankan oleh komputer. Salah satu instruksi yang penting adalah memberi tahu komputer untuk mengabaikan perintah yang kita tulis. Instruksi yang ditulis dalam suatu program tetapi tidak dijalankan oleh komputer disebut “comments”.

    Sebuah komentar akan dilewatkan oleh interpreter atau compiler, sehingga tidak akan memengaruhi alur program yang kita tulis. Komentar ini bisa digunakan sebagai dokumentasi atau penjelasan dari kode yang kita tulis.

    Terdapat dua metode untuk memberikan komentar. Pertama, untuk memberikan komentar pada satu baris saja, kita bisa gunakan tanda dua garis miring (//) di awal baris.

    Lalu, untuk memberikan komentar lebih dari satu baris kita bisa menggunakan tanda /* sebagai pembuka komentar dan tanda */ untuk penutup komentar. Teks apa pun yang berada di antara tanda tersebut akan dijadikan komentar dan tidak akan dieksekusi.