Browser Environment
    Selama belajar materi JavaScript yang dibahas di dalam kelas ini, apakah Anda menyadari semua kode JavaScript berjalan di perangkat browser dan tidak pada perangkat lainnya? Mengapa demikian? Karena kita menggunakan runtime environment milik browser alias semua kode JavaScript dijalankan di atas platform browser.

    Pada awalnya Bahasa Pemrograman JavaScript didesain untuk berjalan di browser. Namun, seiring berjalannya waktu, kini banyak platform yang dapat menjalankan JavaScript di luar browser. Platform tersebut menggunakan runtime environment lain seperti Node JS. Salah satu contohnya adalah ketika kita menjalankan kode JavaScript pada glot.io. 

    Walaupun JavaScript dapat berjalan di luar browser, kita perlu tahu bahwa JavaScript yang berjalan di browser memiliki fungsionalitas khusus yang tidak bisa ditemukan di tempat lain. Hal tersebut karena ia dijalankan di dalam browser environment.

    Apa istimewanya browser environment ini? Istimewanya terletak pada "peralatan-peralatan" khusus yang dapat digunakan oleh kode JavaScript untuk berinteraksi dengan browser maupun dengan dokumen HTML yang kita buat. Masih ingat dengan istilah Browser Object Model (BOM) dan Document Object Model (DOM)? Keduanya secara khusus hanya tersedia untuk JavaScript yang dijalankan dalam browser environment.

    Pada gambar di bawah ini, kita melihat representasi dari objek window yang hanya bisa diakses oleh JavaScript dalam browser environment. Dengan melalui objek window, kita bisa mengakses DOM serta BOM.

    Sehingga, jika kita menjalankan kode JavaScript yang berjalan di luar browser environment, maka object browser dan document object tidak akan tersedia dan menyebabkan error. Contohnya method alert() dari JavaScript dapat dijalankan pada browser seperti berikut.

    Namun, jika menggunakan glot.io, ia akan menghasilkan error karena pada situs tersebut, kode JavaScript dijalankan di environment Node JS yang tidak menyediakan browser object model maupun document object model:

    Keren bukan fungsionalitas tersebut? Dalam pemrograman front-end kita akan sering bergulat dengan browser object model serta document object model untuk mempercantik tampilan website. Sudah siap untuk mengetahui lebih lanjut tentang keduanya?


Pendahuluan Browser Object Model (BOM)
    Setiap browser menyediakan apa yang disebut browser object model (BOM) yang bisa kita gunakan dalam kode JavaScript kita. Dalam browser, object browser model ini diwakilkan oleh sebuah objek bernama window. Mari kita ketik window pada console browser dan lihat method dan method apa saja yang tersedia melalui objek ini:

    Melalui objek window inilah kode JavaScript kita bisa mengakses berbagai method dan atribut yang bisa membantu kita membuat halaman web menjadi lebih interaktif. Kemungkinan Anda akan tertegun melihat begitu banyak method serta atribut, tetapi Anda tidak diharapkan untuk menghafal semuanya. Karena pada materi berikutnya, kita cukup membahas 3 method paling dasar yakni method alert(), prompt(), dan objek console.


Anggota BOM
    Pada sub-modul ini kita akan membahas lebih dalam method dari masing-masing ketiga anggota BOM di atas. Ketiga anggota BOM (Browser Object Model) adalah method alert(), method prompt(), dan diakhiri dengan objek console. Mari mulai membahas method alert terlebih dahulu!

    method alert()
        method alert(), seperti method pada JavaScript menerima 1 parameter opsional yakni sebuah pesan string yang ingin kita tampilkan dalam sebuah dialog box oleh browser. Contohnya jika kita ingin menampilkan sebuah pesan berisi string "Halo user!" menggunakan console, maka caranya adalah sebagai berikut:

            alert("Halo user!");

        Sehingga tampilannya akan terlihat seperti di bawah ini:

        Sama seperti memanggil method pada umumnya pada JavaScript, bukan? Kita bahkan hanya perlu memasukkan variabel yang berisi string ke dalam method alert() sebagai berikut:

            let pesan = "Halo user!";
            alert(pesan);
            
        Maka jika dijalankan pada console browser menjadi sebagai berikut:

        Keren bukan? Kita bisa menampilkan pesan yang telah ditentukan melalui JavaScript. Namun, ada satu hal yang perlu kita ingat saat menggunakan alert(), yakni ketika dialog boxalert() muncul, user tidak bisa berinteraksi dengan bagian lain dari halaman web sampai dialog box tersebut ditutup dengan menekan tombol "OK".