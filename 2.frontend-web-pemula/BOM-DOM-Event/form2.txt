Input Event - Menyiapkan Halaman Website
    Pada materi sebelumnya kita telah membahas beberapa event untuk elemen <form>. Nah, untuk membuat form yang kaya akan fitur, kita bisa menambahkan event listener untuk masing-masing elemen-elemen input dalam form. Kita akan mulai dengan event onInput lalu ke onFocus, onBlur, onChange, onCopy, dan yang terakhir adalah onPaste.

    Sesuai dengan kebiasaan kita pada materi-materi sebelumnya, buat berkas HTML baru terlebih dahulu dan beri nama input-event.html.

        <!DOCTYPE html>
        <html>
            <head>
                <title>Form World</title>
                <style>
                    .contents{
                        position: fixed;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        border: 1px solid black;
                        border-width:2px;
                        padding : 8px;
                    }
        
                    .form-element{
                        margin: 8px;
                        align-items: left;
                    }
                </style>
            </head>
            <body>
                <div class="contents">
                    <h2 align="center"><b>Input Event Form</b></h2>
                    <div class="formContent">
                        <form id="formDataDiri" autocomplete="off">
                            <div class="form-element" id="fieldName">
                                <label for="nama">Nama Panggilan:</label><br>
                                <input id="inputNamaPanggilan" type="text" name="nama" placeholder="Nama panggilan Anda"  maxlength="15"><br>
                                <label id="notifikasiSisaKarakter">Sisa karakter : <span id="sisaKarakter"></span></label>
                            </div>
                            <div class="form-element" id="fieldCopy">
                                <label for="copy"><i>Copy</i> tulisan ini:</label><br>
                                <input id="inputCopy" type="text" name="copy" value="Hello World!" disabled><br>
                            </div>
                            <div class="form-element" id="fieldPaste">
                                <label for="paste"><i>Paste</i> tulisan di sini:</label><br>
                                <input id="inputPaste" type="text" name="paste" placeholder="Paste sesuatu di sini"><br>
                            </div>
                            <div class="form-element" id="fieldCaptcha">
                                <label for="captcha">Tulis <i>captcha</i> berikut:</label><br>
                                <img src="https://i.ibb.co/yy59QPB/Captcha.png" alt="Captcha"><br>
                                <input id="inputCaptcha" type="text" name="captcha" placeholder="Tulis captcha di sini"><br>
                                <p>Tekan Enter pada keyboard jika sudah selesai menulis <i>captcha</i></p>
                            </div>
                            <div class="form-element" align= "center">
                                <input id="submitButton" type="submit" value="Submit Data" disabled>
                            </div>
                        </form>
                    </div>
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function (){
                        const inputMaxLengthOnLoad = document.getElementById("inputNamaPanggilan").maxLength;
                        document.getElementById("sisaKarakter").innerText = inputMaxLengthOnLoad;
                    });
                </script>
            </body>
        </html>



Event onInput
    Event onInput akan dijalankan setiap kali kita menulis atau menghapus apa pun pada sebuah field input yang memiliki event listener tersebut. Pada berkas HTML di atas, field untuk mengisi nama panggilan memiliki batas 15 karakter. Kita ingin membuat sebuah event handler di mana ketika menulis nama, akan tampil berapa karakter yang tersisa untuk menulis nama kita.

    Kita akan menggunakan event onInput untuk memeriksa setiap kali menulis atau menghapus karakter. Ingat ya, karena nanti kita menggunakan method addEventListener(), maka versi string event onInput untuk dimasukkan ke parameter pertama method tersebut adalah “input”.

    Untuk mengimplementasi fitur tersebut, kita harus menambahkan event listener pada input yang memiliki id dengan nilai “inputNamaPanggilan” dan memperbarui teks setiap kali kita menulis atau menghapus karakter baru.

    Tambahkan kode yang dicetak tebal berikut ke dalam elemen <script>:

        <script>
            document.addEventListener('DOMContentLoaded', function (){
                const inputMaxLengthOnLoad = document.getElementById("inputNamaPanggilan").maxLength;
                document.getElementById("sisaKarakter").innerText = inputMaxLengthOnLoad;
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("input", function(){
                const jumlahKarakterDiketik = document.getElementById("inputNamaPanggilan").value.length;
                const jumlahKarakterMaksimal = document.getElementById("inputNamaPanggilan").maxLength;
                console.log(jumlahKarakterDiketik, jumlahKarakterMaksimal);
                const sisaKarakterUpdate = jumlahKarakterMaksimal - jumlahKarakterDiketik;
                document.getElementById("sisaKarakter").innerText = sisaKarakterUpdate;
                if (sisaKarakterUpdate == 0 ){
                    document.getElementById("sisaKarakter").innerText = "batas maksimal tercapai!";
                } else if(sisaKarakterUpdate <= 5){
                    document.getElementById("notifikasiSisaKarakter").style.color = "red";
                } else{
                    document.getElementById("notifikasiSisaKarakter").style.color = "black";
                }
            });
        </script>

    Kode di atas akan memeriksa jumlah karakter yang diperbolehkan dan didapatkan dari pengurangan atribut maxLength pada elemen <input> dengan jumlah karakter pada atribut value milik elemen <input> itu sendiri.

    Jumlah karakter akan terus diperbarui selama kita mengetik atau menghapus karakter baru. Kondisi if dengan else if dibuat sekadar untuk memberikan variasi terhadap pesan jumlah karakter sisa yang ingin ditampilkan. Ketika kita menjalankan berkas HTML yang telah ditambahkan kode di atas, hasilnya akan terlihat seperti ini:

    Kita bisa melihat secara langsung apakah nama panggilan yang ingin dimasukkan akan muat atau tidak. Lalu, bagaimana jika kita ingin tulisan tersebut muncul hanya ketika menekan elemen input untuk menulis nama panggilan? Hal tersebut akan kita pelajari dan praktikkan melalui event onFocus dan onBlur.



Event onFocus
    Event onFocus akan dijalankan ketika melakukan klik di sebuah elemen input. Kita akan mencoba untuk menyembunyikan tulisan berupa notifikasi jumlah karakter yang masih diperbolehkan. Untuk dapat melakukan hal tersebut, kita harus menambahkan sebuah event handler pada elemen input yang menerima penulisan nama panggilan untuk event onFocus.

    Pada elemen <script> pada berkas HTML, tambahkan kode yang dicetak tebal berikut ini:

        <script>
            document.addEventListener('DOMContentLoaded', function (){
                const inputMaxLengthOnLoad = document.getElementById("inputNamaPanggilan").maxLength;
                document.getElementById("sisaKarakter").innerText = inputMaxLengthOnLoad;
                document.getElementById("notifikasiSisaKarakter").style.visibility = "hidden";
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("input", function(){
                const jumlahKarakterDiketik = document.getElementById("inputNamaPanggilan").value.length;
                const jumlahKarakterMaksimal = document.getElementById("inputNamaPanggilan").maxLength;
                console.log(jumlahKarakterDiketik, jumlahKarakterMaksimal);
                const sisaKarakterUpdate = jumlahKarakterMaksimal - jumlahKarakterDiketik;
                document.getElementById("sisaKarakter").innerText = sisaKarakterUpdate;
                if (sisaKarakterUpdate == 0 ){
                    document.getElementById("sisaKarakter").innerText = "batas maksimal tercapai!";
                } else if(sisaKarakterUpdate <= 5){
                    document.getElementById("notifikasiSisaKarakter").style.color = "red";
                } else{
                    document.getElementById("notifikasiSisaKarakter").style.color = "black";
                }
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("focus", function(){
                document.getElementById("notifikasiSisaKarakter").style.visibility = null;
            });
        </script>

    Kode di atas akan menyembunyikan tulisan notifikasi sisa karakter ketika halaman web kita dibuka dan hanya akan dimunculkan ketika kita mulai melakukan proses penulisan pada elemen <input> nama panggilan.

    Perhatikan tulisan notifikasi hanya akan muncul jika kita memulai proses menulis nama panggilan. Walau form kita sudah bekerja sesuai dengan permintaan, tetapi masih ada kejanggalan. Kejanggalannya adalah ketika mengisi data pada elemen <input> lain, notifikasi sisa karakter tetap ada dan tidak hilang. Hal tersebut bisa kita atasi dengan menambahkan event handler untuk event onBlur untuk elemen <input> tersebut.




Event onBlur
    Event onBlur akan dijalankan ketika pada kondisi yang terbalik dengan event onFocus, yakni jika kita “pergi” dari elemen yang memiliki event handler untuk event onFocus. Apa maksud dari “pergi”? Maksudnya adalah kita tidak lagi berinteraksi secara langsung dengan elemen tersebut, seperti kita telah melakukan klik pada elemen lain.

    Dalam elemen <script> dalam berkas HTML, tambahkan kode (sebuah event listener lagi) yang dicetak tebal pada elemen <input> berikut untuk menerima input nama panggilan:

        <script>
            document.addEventListener('DOMContentLoaded', function (){
                const inputMaxLengthOnLoad = document.getElementById("inputNamaPanggilan").maxLength;
                document.getElementById("sisaKarakter").innerText = inputMaxLengthOnLoad;
                document.getElementById("notifikasiSisaKarakter").style.visibility = "hidden";
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("input", function(){
                const jumlahKarakterDiketik = document.getElementById("inputNamaPanggilan").value.length;
                const jumlahKarakterMaksimal = document.getElementById("inputNamaPanggilan").maxLength;
                console.log(jumlahKarakterDiketik, jumlahKarakterMaksimal);
                const sisaKarakterUpdate = jumlahKarakterMaksimal - jumlahKarakterDiketik;
                document.getElementById("sisaKarakter").innerText = sisaKarakterUpdate;
                if (sisaKarakterUpdate == 0 ){
                    document.getElementById("sisaKarakter").innerText = "batas maksimal tercapai!";
                } else if(sisaKarakterUpdate <= 5){
                    document.getElementById("notifikasiSisaKarakter").style.color = "red";
                } else{
                    document.getElementById("notifikasiSisaKarakter").style.color = "black";
                }
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("focus", function(){
                document.getElementById("notifikasiSisaKarakter").style.visibility = null;
            });

            document.getElementById('inputNamaPanggilan').addEventListener('blur', function() {
                document.getElementById('notifikasiSisaKarakter').style.visibility = 'hidden';
            });
        </script>

    Kode yang ditambahkan tersebut hanyalah melakukan kebalikan dari event handler untuk event onFocus yang kita terapkan sebelumnya. Kode tersebut akan “menyembunyikan” kembali pesan notifikasi jumlah sisa karakter yang diperbolehkan. Proses tersebut terjadi ketika kita klik elemen lain alias elemen <input> yang membuat nama panggilan sudah tidak menjadi fokus utama lagi.

    Akhirnya bagian form yang meminta nama panggilan, sudah memiliki fungsionalitas lengkap yang kita harapkan melalui penerapan event handler dan event listener untuk semua event yang sudah ditentukan. Berikutnya, kita akan menerapkan fitur pada bagian form lain yakni bagian captcha terlebih dahulu. Apa yang ingin kita tambahkan? Simak di materi berikutnya ya!




Event onChange
    Event onChange memiliki perilaku yang sama dengan onInput, yakni akan terjadi jika terdeteksi adanya perubahan nilai yang dimasukkan. Perbedaannya terletak pada “kapan” event ini terjadi.

    Pada onInput, event akan terjadi setiap kali nilai yang diinput mengalami perubahan (contohnya penambahan atau pengurangan karakter). Sedangkan pada onChange, event akan terjadi setelah elemen tersebut tidak menjadi fokus lagi alias kita tidak berinteraksi dengannya lagi baru diperiksa apakah ada perubahan atau tidak. Perbedaan keduanya akan tampak saat kita mempraktikkannya.

    Fitur yang ingin kita tambahkan adalah jika kita menulis captcha dengan benar, tombol “Submit Data” bisa ditekan. Bagaimana cara menambahkan event handler onChange pada elemen <input> untuk captcha? Simak uraiannya di bawah ini:

    Tambahkan kode yang bercetak tebal berikut pada elemen <script> seperti di bawah ini:

        <script>
            document.addEventListener('DOMContentLoaded', function (){
                const inputMaxLengthOnLoad = document.getElementById("inputNamaPanggilan").maxLength;
                document.getElementById("sisaKarakter").innerText = inputMaxLengthOnLoad;
                document.getElementById("notifikasiSisaKarakter").style.visibility = "hidden";
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("input", function(){
                const jumlahKarakterDiketik = document.getElementById("inputNamaPanggilan").value.length;
                const jumlahKarakterMaksimal = document.getElementById("inputNamaPanggilan").maxLength;
                console.log(jumlahKarakterDiketik, jumlahKarakterMaksimal);
                const sisaKarakterUpdate = jumlahKarakterMaksimal - jumlahKarakterDiketik;
                document.getElementById("sisaKarakter").innerText = sisaKarakterUpdate;
                if (sisaKarakterUpdate == 0 ){
                    document.getElementById("sisaKarakter").innerText = "batas maksimal tercapai!";
                } else if(sisaKarakterUpdate <= 5){
                    document.getElementById("notifikasiSisaKarakter").style.color = "red";
                } else{
                    document.getElementById("notifikasiSisaKarakter").style.color = "black";
                }
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("focus", function(){
                document.getElementById("notifikasiSisaKarakter").style.visibility = null;
            });

            document.getElementById('inputNamaPanggilan').addEventListener('blur', function() {
                document.getElementById('notifikasiSisaKarakter').style.visibility = 'hidden';
            });

            document.getElementById("inputCaptcha").addEventListener("change", function(){
                const inputCaptcha = document.getElementById("inputCaptcha").value;
                const submitButtonStatus = document.getElementById("submitButton");
                if (inputCaptcha == "PRNU"){
                    submitButtonStatus.removeAttribute("disabled");
                }
            });
        </script>

    Kode di atas akan memeriksa apakah kita memasukkan tulisan yang sesuai dengan captcha-nya. Jika sesuai, tombol “Submit Data” bisa ditekan. Namun, perlu diperhatikan bahwa melalui event onChange, kita harus lebih dulu “mengalihkan” fokus ke elemen lain atau bisa juga dicapai dengan hanya menekan tombol “Enter” pada keyboard. Sehingga, walaupun penulisan kita sudah sesuai dengan yang ada di captcha, event onChange tidak akan terjadi sampai kita menekan tombol “Enter” atau “mengalihkan” fokus ke elemen lain.

    Dari preview di atas kita bisa tahu walaupun sudah menulis konten yang benar sesuai dengan captcha, tombol tidak kunjung bisa ditekan sebelum “mengalihkan” fokus ke elemen lain. Coba ganti tulisan input menjadi bentuk yang salah, maka tombol akan tampak seperti bisa ditekan meskipun tulisan captcha kita salah. 

    Walaupun begitu, tombol masih bisa ditekan ketika input tidak sesuai captcha selama kita langsung menekan tombolnya. Untuk memperbaiki kesalahan, tambahkan kode berikut di akhir elemen <script>:

        document.getElementById("formDataDiri").addEventListener("submit", function(){
            const inputCaptcha = document.getElementById("inputCaptcha").value;
            if (inputCaptcha == "PRNU"){
                event.preventDefault();
                alert("Selamat! Captcha Anda lolos :D");
            } else{
                alert("Captcha Anda belum tepat :(")
                submitButtonStatus.addAttribute("disabled", true);
            }
        });

    Silakan jalankan dan masukkan captcha kembali. Sekarang kita sudah tidak bisa men-submit data ketika captcha yang dimasukkan salah. Bug berhasil dihilangkan!



Event onCopy
    Event onCopy tergolong dalam kelompok clipboard events. Event ini terjadi jika kita melakukan operasi pada clipboard seperti copy, cut, dan paste. Kita hanya akan membahas dua saja yakni event onCopy yakni operasi copy dan event onPaste yakni operasi paste. Pertama kita akan menggunakan onCopy terlebih dahulu.

    Pada berkas HTML di atas, kita sudah memiliki bagian form yang dihiasi dengan kata kunci “copy”. Tugas kita kali ini adalah menambahkan event listener untuk event onCopy. Sedangkan fungsi event handler-nya hanyalah memunculkan sebuah dialog box alert yang berisi pesan “Anda telah men-copy sesuatu...”.

    Untuk menambah fitur tersebut, maka kita hanya perlu menambahkan kode yang dicetak tebal berikut ke dalam elemen <script>:

        <script>
            document.addEventListener('DOMContentLoaded', function (){
                const inputMaxLengthOnLoad = document.getElementById("inputNamaPanggilan").maxLength;
                document.getElementById("sisaKarakter").innerText = inputMaxLengthOnLoad;
                document.getElementById("notifikasiSisaKarakter").style.visibility = "hidden";
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("input", function(){
                const jumlahKarakterDiketik = document.getElementById("inputNamaPanggilan").value.length;
                const jumlahKarakterMaksimal = document.getElementById("inputNamaPanggilan").maxLength;
                console.log(jumlahKarakterDiketik, jumlahKarakterMaksimal);
                const sisaKarakterUpdate = jumlahKarakterMaksimal - jumlahKarakterDiketik;
                document.getElementById("sisaKarakter").innerText = sisaKarakterUpdate;
                if (sisaKarakterUpdate == 0 ){
                    document.getElementById("sisaKarakter").innerText = "batas maksimal tercapai!";
                } else if(sisaKarakterUpdate <= 5){
                    document.getElementById("notifikasiSisaKarakter").style.color = "red";
                } else{
                    document.getElementById("notifikasiSisaKarakter").style.color = "black";
                }
            });
        
            document.getElementById("inputNamaPanggilan").addEventListener("focus", function(){
                document.getElementById("notifikasiSisaKarakter").style.visibility = null;
            });
        
        
            document.getElementById("inputNamaPanggilan").addEventListener("blur", function(){
                document.getElementById("notifikasiSisaKarakter").style.visibility = "hidden";
            });
        
            document.getElementById("inputCaptcha").addEventListener("change", function(){
                const inputCaptcha = document.getElementById("inputCaptcha").value;
                const submitButtonStatus = document.getElementById("submitButton");
                if (inputCaptcha == "PRNU"){
                    submitButtonStatus.removeAttribute("disabled");
                }
            });
        
            document.getElementById("formDataDiri").addEventListener("submit", function(){
                const inputCaptcha = document.getElementById("inputCaptcha").value;
                if (inputCaptcha == "PRNU"){
                    event.preventDefault();
                    alert("Selamat! Captcha Anda lolos :D");
                }else{
                    alert("Captcha Anda belum tepat :(")
                    submitButtonStatus.addAttribute("disabled", true);
                }
            });
        
            document.getElementById("inputCopy").addEventListener("copy", function(){
                alert("Anda telah men-copy sesuatu...");
            });
        </script>

    Melalui kode di atas, kita telah membuat berkas HTML yang memunculkan alert dialog box ketika menyalin tulisan dari elemen <input> tersebut. Tampilan ketika dijalankan seperti berikut: